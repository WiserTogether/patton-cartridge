#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH
source "${OPENSHIFT_PATTON_DIR}/usr/versions/${OPENSHIFT_PYTHON_VERSION}/lib/create-virtenv"
source "${OPENSHIFT_PATTON_DIR}/usr/versions/${OPENSHIFT_PYTHON_VERSION}/lib/wisertogether-patton"


SUPERVISORD="${VE_ROOT}/bin/supervisord -c ${OPENSHIFT_PATTON_DIR}etc/supervisord.conf"
SUPERVISORCTL="${VE_ROOT}/bin/supervisorctl  -c ${OPENSHIFT_PATTON_DIR}etc/supervisord.conf"

# For backwards compatibility
export APPDIR=$OPENSHIFT_PATTON_DIR

function start() {

    if is_running; then
      echo "The patton-based application appears to be running already." 1>&2
      return 0
    fi

    pushd $OPENSHIFT_REPO_DIR > /dev/null
        source env.sh
        create_supervisor_config
        mkdir -p $OPENSHIFT_PATTON_RUN_DIR

        # Make sure supervisor is dead
        $SUPERVISORCTL shutdown

        # Then start it up
        $SUPERVISORD
    popd
}


function stop() {

    if ! is_running; then
      echo "The patton-based application appears to be stopped already." 1>&2
      return 0
    fi

   pushd $OPENSHIFT_REPO_DIR > /dev/null
     echo "Shutting down the supervisor."
     source env.sh
     $SUPERVISORCTL shutdown
   popd
}


function restart() {
  stop
  start
}

function status() {
    if is_running; then
        client_result "Application is running."
    else
        client_result "Application is either stopped or inaccessible."
    fi
}

function reload() {
    stop
    start
}

# Clean up any log files
function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_PATTON_LOG_DIR."
  shopt -s dotglob
  rm -rf $OPENSHIFT_PATTON_LOG_DIR/*
}

function build() {
    if [ -n "$OPENSHIFT_PYPI_MIRROR_URL" ]; then
        m=$OPENSHIFT_PYPI_MIRROR_URL
        if curl -m 15 -f -s "$m" &>/dev/null
        then
            OPENSHIFT_PYTHON_MIRROR="-i $m"
        fi
    fi

    if force_clean_build_enabled_for_latest_deployment; then
        echo "Force-clean builds are enabled." 1>&2
        remove-virtenv
    fi

    if [ ! -f $VIRTUAL_ENV/bin/python ]; then
      echo "Recreating virtenv." 1>&2
      create-virtenv
    fi

    relative-virtenv
}

function deploy() {
    if is_running; then
      stop
    fi
    start
}

case "$1" in
  start)     start ;;
  stop)      stop ;;
  restart)   restart ;;
  status)    status ;;
  reload)    reload ;;
  tidy)      tidy ;;
  build)     build ;;
  deploy)    deploy ;;
  *)         exit 0
esac
